--- ../src-base/minecraft/shadersmod/client/GuiShaderOptions.java
+++ ../src-work/minecraft/shadersmod/client/GuiShaderOptions.java
@@ -356,38 +356,44 @@
         }
         else
         {
-            desc = StrUtils.removePrefix(desc, "
-                                         String[] astring = desc.split("\\. ");
-                                         for(int i = 0; i < astring.length; ++i) {
-                                         astring[i] = " - " + astring[i].trim();
-                                         astring[i] = StrUtils.removeSuffix(astring[i], ".");
+            desc = StrUtils.removePrefix(desc, "//");
+            String[] astring = desc.split("\\. ");
+            for(int i = 0; i < astring.length; ++i)
+            {
+            	astring[i] = " - " + astring[i].trim();
+                astring[i] = StrUtils.removeSuffix(astring[i], ".");
+            }
+            
+            return astring;
+        }
+    }
+    private String[] makeTooltipLines(int width, List<String> args) {
+    	FontRenderer fontrenderer = Config.getMinecraft().field_71466_p;
+        List<String> list = new ArrayList();
+        
+        for(int i = 0; i < args.size(); ++i) {
+        	String s = (String)args.get(i);
+            
+        	if(s != null && s.length() > 0) {
+            	for(String s1 : fontrenderer.func_78271_c(s, width)) {
+                	list.add(s1);
+                }
+           	}
+        }
+
+        String[] astring = (String[])((String[])list.toArray(new String[list.size()]));
+        return astring;
+    }
+    
+    private GuiButton getSelectedButton(int x, int y) {
+    	for(int i = 0; i < this.field_146292_n.size(); ++i) {
+        	GuiButton guibutton = (GuiButton)this.field_146292_n.get(i);
+            int j = GuiVideoSettings.getButtonWidth(guibutton);
+            int k = GuiVideoSettings.getButtonHeight(guibutton);
+            if(x >= guibutton.field_146128_h && y >= guibutton.field_146129_i && x < guibutton.field_146128_h + j && y < guibutton.field_146129_i + k) {
+            	return guibutton;
+            }
+        }
+        return null;
+    }
                                      }
-                                         return astring;
-                                     }
-                                     }
-                                         private String[] makeTooltipLines(int width, List<String> args) {
-                                         FontRenderer fontrenderer = Config.getMinecraft().field_71466_p;
-                                         List<String> list = new ArrayList();
-                                         for(int i = 0; i < args.size(); ++i) {
-                                         String s = (String)args.get(i);
-                                         if(s != null && s.length() > 0) {
-                                         for(String s1 : fontrenderer.func_78271_c(s, width)) {
-                                         list.add(s1);
-                                     }
-                                     }
-                                     }
-                                         String[] astring = (String[])((String[])list.toArray(new String[list.size()]));
-                                         return astring;
-                                     }
-                                         private GuiButton getSelectedButton(int x, int y) {
-                                         for(int i = 0; i < this.field_146292_n.size(); ++i) {
-                                         GuiButton guibutton = (GuiButton)this.field_146292_n.get(i);
-                                         int j = GuiVideoSettings.getButtonWidth(guibutton);
-                                         int k = GuiVideoSettings.getButtonHeight(guibutton);
-                                         if(x >= guibutton.field_146128_h && y >= guibutton.field_146129_i && x < guibutton.field_146128_h + j && y < guibutton.field_146129_i + k) {
-                                         return guibutton;
-                                     }
-                                     }
-                                         return null;
-                                     }
-                                     }
